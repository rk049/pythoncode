# Object Oriented Programming
# Objects: Instance of class
# Objects have method which can be accessed using dot operator.
# We can create our own class and objects and methods

# class : blueprint

class Oops:

    #Class Object Attribute and it is static and is called by classname.(XX)
    Membership = True

    def __init__(self, name):
        if (Oops.Membership):
            self.name = name

 #Note:__init__ method is automatically called whenever an instance if class is created/ object is created

    def run(self,age):
        print('run')
        print(f'My name is {self.name} and age is {age}')

# as run function is not returning anything so in output we will get none also

obj1 = Oops('Rohit')
print(obj1.name)
print(obj1.run(18))

# @classmethod @staticmethod

# 1. @classmethod : Instead of using self, we use cls. Don't need to create object for it.
# 2. @staticmethod : We don't care about class state i.e. what inside __init__ method.

class A:
    def __init__(self,name):
        self.name=name

    def B(self):
        return self.name

    @classmethod
    def C(cls,age):
        return age

    @staticmethod
    def D(height):
        return height

obj1 = A('Rohit')
print(obj1.name)
print(obj1.B())
print(obj1.C(24))
print(obj1.D(5))
